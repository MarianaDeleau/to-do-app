{"version":3,"sources":["utils/axios.ts","api/users.ts","api/tasks.ts","api/selectedTask.ts","components/layout/Footer/index.tsx","components/layout/Navbar/items.ts","hooks/useAuth/index.ts","components/layout/Navbar/index.tsx","components/layout/Header/index.tsx","components/layout/Main/index.tsx","components/layout/Layout/index.tsx","components/parts/TaskWrapper/index.tsx","components/parts/CategoryWrapper/index.tsx","pages/Users/index.tsx","pages/SignUp/api/index.ts","hoc/WithAuth/index.tsx","pages/SignUp/index.tsx","pages/Tasks/api/index.ts","pages/Categories/api/index.ts","pages/Tasks/index.tsx","pages/EditTask/api/index.ts","pages/EditTask/index.tsx","helpers/params.ts","components/common/Card/index.tsx","pages/Dashboard/index.tsx","pages/Login/index.tsx","pages/Categories/index.tsx","pages/Home/index.tsx","App.tsx","index.tsx"],"names":["api","axios","create","baseURL","mapToArray","object","array","elem","push","id","getUsers","a","get","response","data","getTasks","getSelectedTasks","dataid","Footer","menuItems","href","label","useAuth","useState","JSON","parse","localStorage","getItem","userSession","setUserSession","useHistory","login","user","password","users","userLogged","find","u","email","logout","removeItem","NavbarApp","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","className","name","Button","size","active","onClick","e","icon","faPowerOff","Toggle","Collapse","Nav","map","item","Item","to","Header","Main","children","Layout","hideHeader","hideFooter","mainClass","TaskWrapper","title","color","Row","CategoryWrapper","Users","setUsers","useEffect","then","Card","style","width","Body","Title","Subtitle","gender","signup","post","publicRoutes","WithAuth","Component","location","includes","pathname","SignUpPage","setEmail","setPassword","setName","setGender","action","onSubmit","preventDefault","htmlFor","type","onChange","target","value","required","disabled","selected","addtask","window","createCategory","getCategories","defaultValues","category","description","progress","creationDate","startDate","completionDate","AddTaskPage","inputs","setInputs","setCategory","obtenerCategor√≠as","Form","edittask","param","URLSearchParams","search","patch","EditTaskPage","idParams","params","titleParams","descriptionParams","progressParams","userParams","creationDateParams","startDateParams","completionDateParams","getParams","tarea","setTarea","TaskCard","Text","DashboardPage","task","setTask","obtenerTareas","Col","toUpperCase","LoginPage","setPass","handleSubmit","console","log","setItem","stringify","CategoriesPage","categoryCard","setCategoryCard","md","HomePage","App","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4efa41c9.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://to-do-app-44165-default-rtdb.firebaseio.com'\r\n});\r\n\r\nexport { api }","import { User } from \"../types\";\r\nimport { api } from \"../utils\"\r\n\r\nconst mapToArray = (object: any) => {\r\n    const array = [];\r\n  \r\n    for (const elem in object) {\r\n      array.push({\r\n        id: elem,\r\n        ...object[elem],\r\n      });\r\n    }\r\n  \r\n    return array;\r\n};\r\n  \r\nconst getUsers = async (): Promise<User[]> => {\r\n    const response = await api.get(\"/users.json\");\r\n    return mapToArray(response.data);\r\n  };\r\n\r\nexport { getUsers };\r\nexport { mapToArray }","import { api } from \"../utils/axios\"\r\nimport { Task } from \"../types\";\r\nimport { mapToArray } from \"./users\"\r\n\r\nconst getTasks = async (): Promise<Task[]> => {\r\n    const response = await api.get(\"/tasks.json\");\r\n    return mapToArray(response.data);\r\n  };\r\n  \r\n  export { getTasks };\r\n  ","import { api } from \"../utils/axios\"\r\n\r\n\r\n\r\nconst getSelectedTasks = async (dataid:string) => {\r\n    const response = await api.get(`/tasks/${dataid}.json`);\r\n    return response.data;\r\n  };\r\n  \r\n  export { getSelectedTasks };\r\n  ","const Footer = () => {\r\n    return <footer>Hecho con ‚ù§Ô∏è por Marian </footer>;\r\n}\r\n\r\nexport { Footer }","export const menuItems = [\r\n  {\r\n    href: \"/\",\r\n    label: \"Home\",\r\n  },\r\n  {\r\n    href: \"/login\",\r\n    label: \"Login\",\r\n  },\r\n  {\r\n    href: \"/sign-up\",\r\n    label: \"Sign Up\",\r\n  },\r\n    {\r\n      href: \"/dashboard\",\r\n      label: \"Dashboard\",\r\n    },\r\n    {\r\n      href: \"/add-tasks\",\r\n      label: \"Agregar Tareas\",\r\n  },\r\n  {\r\n    href: \"/categories\",\r\n    label: \"Categor√≠as\",\r\n  },\r\n    {\r\n      href: \"/users\",\r\n      label: \"Usuarios\",\r\n    },\r\n  ];\r\n  ","import { useState } from \"react\";\r\nimport { useHistory } from \"react-router\";\r\nimport { getUsers } from \"../../api\";\r\nimport { User } from \"../../types\";\r\n\r\nconst useAuth = () => {\r\n  const [userSession, setUserSession] = useState<User>(\r\n    JSON.parse(localStorage.getItem(\"user\")!)\r\n  );\r\n  const { push } = useHistory();\r\n  \r\n  const login = async (user: string, password: string) => {\r\n    const users = await getUsers();\r\n \r\n\r\n    const userLogged = users.find((u) => {\r\n      if (u.email === user && u.password === password) {\r\n        return true;\r\n      }\r\n      return false;\r\n    });\r\n\r\n    if (userLogged) {\r\n      setUserSession({ ...userLogged });\r\n      push('/dashboard')\r\n    } else {\r\n      push('/')\r\n    }   \r\n\r\n  };\r\n\r\n  const logout = () => {\r\n\r\n    if (userSession) {\r\n      localStorage.removeItem(\"user\")\r\n      push('/')\r\n   }\r\n  };\r\n\r\n  const recoveryPassword = () => {};\r\n\r\n  return { login, userSession, logout };\r\n};\r\n\r\nexport { useAuth };\r\n\r\n//{\"id\":\"-MlVIxa4Xgt_iT8cL9fG\",\"email\":\"marianadeleau@gmail.com\",\"gender\":\"mujer\",\"name\":\"Mariana Deleau\",\"password\":\"1234\"}\r\n","import { Nav, Container, Navbar } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { menuItems } from \"./items\";\r\nimport { useAuth } from \"../../../hooks/useAuth\"\r\nimport { Button } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faPowerOff } from '@fortawesome/free-solid-svg-icons'\r\n\r\nconst NavbarApp = () => {\r\n    const { userSession, logout } = useAuth()\r\n   \r\n    return (\r\n    <Navbar collapseOnSelect  expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Container>\r\n                <Navbar.Brand className=\"fs-1 fw-bold\">ToDO APPüìå{userSession && <h6>Usuario: {`${userSession.name}`}</h6>}</Navbar.Brand>\r\n               <Button variant=\"secondary\" size=\"lg\" active className=\"rounded-circle ms-3 mb-3\" onClick={(e) => logout()}>\r\n                    <FontAwesomeIcon icon={faPowerOff}/>\r\n                </Button>\r\n                <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n                <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n                <Nav variant=\"tabs\" className=\"ms-auto justify-content-center\">\r\n                 {menuItems.map((item) => {\r\n                     return (\r\n                        <Nav.Item>\r\n                            <Link to={item.href} className=\"navLink\">{item.label}</Link>\r\n                        </Nav.Item>\r\n                            );\r\n                 })}              \r\n                </Nav>\r\n                </Navbar.Collapse>\r\n        </Container>\r\n    </Navbar>\r\n    )\r\n};\r\n\r\n  export { NavbarApp };","import { NavbarApp } from \"../Navbar\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <NavbarApp />\r\n    </header>\r\n  );\r\n};\r\n\r\nexport { Header };\r\n","import { FC } from \"react\";\r\n\r\ntype Props = {\r\n  className?: string;\r\n};\r\n\r\nconst Main: FC<Props> = ({ children, className }) => {\r\n  return <main className={className}>{children}</main>;\r\n};\r\n\r\nexport { Main };\r\n","import { FC } from 'react'\r\nimport { Footer } from '../Footer'\r\nimport { Header } from'../Header'\r\nimport { Main } from '../Main'\r\n\r\n\r\n\r\n\r\ntype Props = {\r\n    hideHeader?: boolean;\r\n    hideFooter?: boolean;\r\n    mainClass?: string;\r\n  };\r\n  \r\n  const Layout: FC<Props> = ({ children, hideHeader, hideFooter, mainClass }) => {\r\n    return (\r\n      <>\r\n        {!hideHeader && <Header />}\r\n        <Main className={mainClass}>{children}</Main>\r\n        {!hideFooter && <Footer />}\r\n      </>\r\n    );\r\n  };\r\n  \r\n  export { Layout };\r\n  ","import { FC } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\n\r\ntype Props = {\r\n    title?: string;\r\n    color?: string;\r\n}\r\nconst TaskWrapper: FC<Props> = ({ title, color, children }) => {\r\n    return (\r\n        <Container className=\"mt-2 mb-2\">\r\n            <Row className=\"d-flex justify-content-center border\">\r\n                <div className=\"d-flex justify-content-center \"><h2 className={`mt-3 text-center badge rounded-pill p-3 fs-4 text-light ${color}`}>{title}</h2></div>\r\n                {children}\r\n            </Row>  \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport { TaskWrapper }","import { FC } from \"react\";\r\nimport { Container, Row } from \"react-bootstrap\";\r\n\r\n\r\n\r\nconst CategoryWrapper: FC = ({ children }) => {\r\n    return (\r\n        <Container className=\"mt-2 mb-2\">\r\n            <Row className=\"d-flex justify-content-center \">\r\n                <div className=\"d-flex justify-content-center \"><h2 className=\"mt-3 text-center badge rounded-pill bg-dark p-3 fs-4 text-light\">Categor√≠as</h2></div>\r\n                {children}\r\n            </Row>  \r\n        </Container>\r\n    )\r\n}\r\n\r\nexport { CategoryWrapper }","import { useEffect, useState } from \"react\";\r\nimport { getUsers } from \"../../api\";\r\nimport { User } from \"../../types\";\r\nimport { Layout } from \"../../components\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport { useAuth } from \"../../hooks\";\r\n\r\n\r\nconst Users = () => {\r\n  const [users, setUsers] = useState<User[]>();\r\n\r\n  useEffect(() => {\r\n    getUsers().then((response) => {\r\n      setUsers(response);\r\n    });\r\n  }, []);\r\n\r\n  const { userSession } = useAuth()\r\n\r\n  return (\r\n    <Layout mainClass=\"users\">\r\n       {users?.map((item) => {\r\n               if (userSession.id === item.id) {\r\n                 return(\r\n                <Card style={{ width: '18rem' }} className=\"cardTask shadow-lg p-3 mb-5 bg-body rounded\" data-id={item.id}>\r\n                    <Card.Body>\r\n                        <Card.Title className=\"fw-bold h4\">{item.name}</Card.Title>\r\n                        <Card.Subtitle className=\"mb-2 text-muted fs-6 fw-normal\">Mail:{item.email}</Card.Subtitle>\r\n                        <Card.Subtitle className=\"mb-2 text-muted fs-6 fw-light\">G√©nero: {item.gender}</Card.Subtitle>\r\n                        <Card.Subtitle className=\"mb-2 text-muted fs-6 fw-light\">Password: {item.password}</Card.Subtitle>                    \r\n                    </Card.Body>\r\n                </Card>\r\n              )}\r\n              else {\r\n                return(\r\n               <Card style={{ width: '18rem' }} className=\"cardTask shadow-lg p-3 mb-5 bg-body rounded\" data-id={item.id}>\r\n                   <Card.Body>\r\n                       <Card.Title className=\"fw-bold h4\">{item.name}</Card.Title>\r\n                       <Card.Subtitle className=\"mb-2 text-muted fs-6 fw-normal\">Mail:{\"****\"}</Card.Subtitle>\r\n                       <Card.Subtitle className=\"mb-2 text-muted fs-6 fw-light\">G√©nero: {\"****\"}</Card.Subtitle>\r\n                       <Card.Subtitle className=\"mb-2 text-muted fs-6 fw-light\">Password: {\"****\"}</Card.Subtitle>                    \r\n                   </Card.Body>\r\n               </Card>\r\n             )}\r\n        })}\r\n      </Layout>  );\r\n};\r\n\r\nexport { Users };\r\n\r\n\r\n","import { api } from \"../../../utils\";\r\n\r\ntype Payload = {\r\n  email: string;\r\n  password: string;\r\n  name: string;\r\n  gender: string;\r\n};\r\n\r\nconst signup = async (data: Payload) => {\r\n  await api.post(\"/users.json\", data);\r\n};\r\n\r\nexport { signup };\r\n","import { FC } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../hooks\";\r\n\r\nconst isAuthenticated = true;\r\nconst publicRoutes = [\"/login\", \"/sign-up\", \"/\"]\r\n\r\ntype withAuthenticationFn = (Component: FC) => FC;\r\n\r\nconst WithAuth: withAuthenticationFn = (Component) => {\r\n  const Authenticated: FC = (): JSX.Element | null => {\r\n    const { push, location } = useHistory();\r\n    const { userSession } = useAuth();\r\n\r\n    if (!userSession && !publicRoutes.includes(location.pathname)) {\r\n      push(\"/\");\r\n    } else if (userSession && publicRoutes.includes(location.pathname)){\r\n      push(\"/dashboard\");\r\n    }\r\n\r\n    return isAuthenticated ? <Component /> : null;\r\n  };\r\n\r\n  return Authenticated;\r\n};\r\n\r\nexport { WithAuth };","import { FC, FormEvent, useState } from \"react\";\r\nimport { signup } from \"./api\";\r\nimport { Layout } from \"../../components\";\r\nimport { useHistory } from \"react-router\";\r\nimport { WithAuth } from \"../../hoc\";\r\n\r\nconst SignUp: FC = () => {\r\n  const [email, setEmail] = useState<string>(\"\");\r\n  const [password, setPassword] = useState<string>(\"\");\r\n  const [name, setName] = useState<string>(\"\");\r\n  const [gender, setGender] = useState<string>(\"\");\r\n  const { push } = useHistory();\r\n\r\n  const handleSubmit = (e: FormEvent) => {\r\n    e.preventDefault();\r\n    signup({ email, password, name, gender });\r\n    push(\"/login\");\r\n  };\r\n\r\n  return (\r\n    <Layout mainClass=\"sign-up\">\r\n      <h4>Por favor reg√≠strese:</h4>\r\n      <form action=\"\" onSubmit={handleSubmit}>\r\n        <div>\r\n          <label htmlFor=\"email\">Email</label>\r\n          <input\r\n            id=\"email\"\r\n            type=\"email\"\r\n            name=\"email\"\r\n            onChange={(e) => {\r\n              setEmail(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            id=\"password\"\r\n            type=\"password\"\r\n            name=\"password\"\r\n            onChange={(e) => {\r\n              setPassword(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n          <label htmlFor=\"name\">Nombre</label>\r\n          <input\r\n            id=\"name\"\r\n            type=\"name\"\r\n            name=\"name\"\r\n            onChange={(e) => {\r\n              setName(e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div>\r\n        <label htmlFor=\"name\">G√©nero</label>\r\n          <select\r\n            name=\"gender\"\r\n            id=\"gender\"\r\n            onChange={(e) => {\r\n              setGender(e.target.value);\r\n            }}\r\n            required\r\n          >\r\n            <option value=\"\" disabled selected>\r\n              Seleccionar\r\n            </option>\r\n            <option value=\"mujer\">Mujer</option>\r\n            <option value=\"hombre\">Hombre</option>\r\n          </select>\r\n        </div>\r\n\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n      </Layout>  );\r\n};\r\n\r\nexport const SignUpPage = WithAuth(SignUp)\r\n","import { api } from \"../../../utils\"\r\n\r\ntype Payload = {\r\n    title: string;\r\n    description: string;\r\n    progress: string;\r\n    user: string;\r\n    creationDate: string;\r\n    startDate: string;\r\n    completionDate: string;\r\n    };\r\n\r\n  \r\nconst addtask = async (data: Payload) => {\r\n    await api.post(\"/tasks.json\", data);\r\n    window.location.href = \"/dashboard\"\r\n  };\r\n  \r\n  export { addtask };","import { mapToArray } from \"../../../api/users\";\r\nimport { useAuth } from \"../../../hooks\";\r\nimport { api } from \"../../../utils\";\r\n\r\ntype Payload = {\r\n    category: string,\r\n    user: string,\r\n};\r\n\r\n\r\nconst createCategory = async (data: Payload) => {\r\n    await api.post(\"/categories.json\", data);\r\n};\r\n\r\nconst getCategories = async () => {\r\n    const response = await api.get(\"/categories.json\");\r\n    return mapToArray(response.data);\r\n};\r\n  \r\nconst editCategory = async (data: Payload) => {\r\n    const param = new URLSearchParams(window.location.search);\r\n    const id = await param.get('id')\r\n    await api.patch(`/categories/${id}.json`, data);\r\n};\r\n  \r\nconst deleteCategory = async () => {\r\n    const param = new URLSearchParams(window.location.search);\r\n    const id = await param.get('id')\r\n    await api.delete(`/categories/${id}.json`);\r\n  };\r\n\r\n\r\nexport { createCategory, getCategories, editCategory, deleteCategory };\r\n\r\n  ","import { FC, FormEvent, useState } from \"react\";\r\nimport { Form } from \"react-bootstrap\";\r\n//import { User } from \"../../types\";\r\nimport { addtask } from \"./api\";\r\nimport { Layout } from \"../../components\";\r\nimport { useAuth } from \"../../hooks\";\r\nimport { WithAuth } from \"../../hoc\";\r\nimport { getCategories } from \"../Categories/api\";\r\nimport { Category } from \"../../types\";\r\nimport { useHistory } from \"react-router\";\r\n\r\nconst defaultValues = {\r\n  title: \"\",\r\n  category: \"\",\r\n  description: \"\",\r\n  progress: \"\",\r\n  creationDate: \"\",\r\n  startDate: \"\",\r\n  completionDate:\"\",\r\n}\r\n\r\nconst AddTask: FC = () => {\r\n    \r\n  const [inputs, setInputs] = useState(defaultValues);\r\n  const [category, setCategory] = useState<Category[]>();\r\n  \r\n  const { push } = useHistory();\r\n\r\n  const obtenerCategor√≠as = async () => {\r\n    const response = await getCategories();\r\n    setCategory(response);\r\n  };\r\n\r\n  if (!category) {\r\n    obtenerCategor√≠as();\r\n}\r\n\r\n    const {userSession} = useAuth()\r\n  \r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n          \r\n      addtask({ ...inputs, user: userSession.id });\r\n      push(\"/dashboard\");\r\n      };\r\n\r\n      return (\r\n        <Layout mainClass=\"add-tasks\">\r\n          <h4>Agregar nuevas tareas</h4>\r\n          <Form onSubmit={handleSubmit}>\r\n            <div>\r\n              <label htmlFor=\"title\">T√≠tulo</label>\r\n              <input\r\n                id=\"title\"\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={inputs.title}\r\n                onChange={(e) => {\r\n                  setInputs({ ...inputs, title: e.target.value });\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"progress\">Categor√≠a</label>\r\n              <select \r\n                id=\"progress\"\r\n                name=\"progress\"\r\n                value={inputs.category}\r\n                onChange={(e) => {\r\n                  setInputs({ ...inputs, category: e.target.value });\r\n                }}\r\n                required\r\n              >\r\n                <option value=\"\" selected>Seleccione Categor√≠a</option>\r\n                {category?.map((item) => {\r\n                  if (userSession.id === item.user) {\r\n                    return (\r\n                      <option value={item.category}>{item.category}</option>)\r\n                  }\r\n                  return ''\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Descripci√≥n</label>\r\n              <input\r\n                id=\"description\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                value={inputs.description}\r\n                onChange={(e) => {\r\n                  setInputs({ ...inputs, description: e.target.value });\r\n                }}\r\n              />\r\n            </div>\r\n    \r\n            <div>\r\n              <label htmlFor=\"progress\">Progreso</label>\r\n              <select \r\n                id=\"progress\"\r\n                name=\"progress\"\r\n                value={inputs.progress}\r\n                onChange={(e) => {\r\n                  setInputs({ ...inputs, progress: e.target.value });\r\n                }}\r\n                required\r\n              >\r\n                <option value=\"\" selected>Seleccione Estado</option>\r\n                <option value=\"pendiente\">Pendiente</option>\r\n                <option value=\"enproceso\">En Proceso</option>\r\n                <option value=\"finalizada\">Finalizada</option>\r\n                <option value=\"postergada\">Postergada</option>\r\n                <option value=\"cancelada\">Cancelada</option>\r\n                </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"creationDate\">Fecha de Creaci√≥n</label>\r\n              <input\r\n                id=\"creationDate\"\r\n                type=\"date\"\r\n                name=\"creationDate\"\r\n                value={inputs.creationDate}\r\n                onChange={(e) => {\r\n                  setInputs({ ...inputs, creationDate: e.target.value });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"startDate\">Fecha de Inicio</label>\r\n              <input\r\n                id=\"startDate\"\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                value={inputs.startDate}\r\n                onChange={(e) => {\r\n                  setInputs({ ...inputs, startDate: e.target.value });\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"completionDate\">Fecha de Finalizaci√≥n</label>\r\n              <input\r\n                id=\"completionDate\"\r\n                type=\"date\"\r\n                name=\"completionDate\"\r\n                value={inputs.completionDate}\r\n                onChange={(e) => {\r\n                  setInputs({ ...inputs, completionDate: e.target.value });\r\n                }}\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Agregar Tarea</button>\r\n          </Form>\r\n        </Layout>\r\n      );\r\n\r\n    \r\n}\r\n\r\nexport const AddTaskPage = WithAuth(AddTask)","import { api } from \"../../../utils\"\r\n\r\ntype Payload = {\r\n    title: string;\r\n    category: string; \r\n    description: string;\r\n    progress: string;\r\n    user: string;\r\n    creationDate: string;\r\n    startDate: string;\r\n    completionDate: string;\r\n    };\r\n\r\n  \r\nconst edittask = async (data: Payload) => {\r\n    const param = new URLSearchParams(window.location.search);\r\n    const id = await param.get('id')\r\n    await api.patch(`/tasks/${id}.json`, data);\r\n\r\n}\r\n  export { edittask };","import { FC, FormEvent, useEffect, useState } from \"react\"\r\nimport { Form } from \"react-bootstrap\"\r\nimport { Layout } from \"../../components\"\r\nimport { useAuth } from \"../../hooks\"\r\nimport { getParams } from \"../../helpers/params\"\r\nimport { edittask } from \"./api\"\r\nimport { getSelectedTasks } from '../../api'\r\nimport { useHistory } from \"react-router\"\r\nimport { WithAuth } from \"../../hoc\"\r\nimport { Category } from \"../../types\"\r\nimport { getCategories } from \"../Categories/api\"\r\n\r\nconst defaultValues = {\r\n  title: '',\r\n  category: '',\r\n  description: '',\r\n  progress: '',\r\n  user: '',\r\n  creationDate: '',\r\n  startDate: '',\r\n  completionDate: '',\r\n}\r\n\r\nconst EditTask: FC =  () => {\r\n\r\n  const { idParams } = getParams();\r\n  \r\n  const { push } = useHistory();\r\n\r\n  const [tarea, setTarea] = useState(defaultValues);\r\n  const [category, setCategory] = useState<Category[]>();\r\n   \r\n  const obtenerCategor√≠as = async () => {\r\n    const response = await getCategories();\r\n    setCategory(response);\r\n  };\r\n\r\n  if (!category) {\r\n    obtenerCategor√≠as();\r\n  }\r\n  \r\n    useEffect(() => {\r\n      idParams && getSelectedTasks(idParams).then((response) => {\r\n        setTarea(response);     \r\n    });\r\n  }, [idParams]);\r\n  \r\n    const { userSession } = useAuth()\r\n  \r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n    \r\n      edittask({ ...tarea, user: userSession.id});\r\n      push(\"/dashboard\");\r\n      };\r\n\r\n      return (\r\n        <Layout mainClass=\"edit-task\">\r\n          <h4>Editar tarea seleccionada</h4>\r\n          <Form onSubmit={handleSubmit}>\r\n            <div>\r\n              <label htmlFor=\"title\">T√≠tulo</label>\r\n              <input\r\n                id=\"title\"\r\n                type=\"text\"\r\n                name=\"title\"\r\n                value={tarea?.title}\r\n                onChange={(e) => {\r\n                  setTarea({...tarea, title: e.target.value})\r\n                }}\r\n              />\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"progress\">Categor√≠a</label>\r\n              <select \r\n                id=\"progress\"\r\n                name=\"progress\"\r\n                value={tarea?.category}\r\n                onChange={(e) => {\r\n                  setTarea({ ...tarea, category: e.target.value });\r\n                }}\r\n                required\r\n              >\r\n                {category?.map((item) => {\r\n                  if (userSession.id === item.user) {\r\n                    return (\r\n                      <option value={item.category}>{item.category}</option>)\r\n                  }\r\n                  return ''\r\n                })}\r\n              </select>\r\n            </div>\r\n            <div>\r\n              <label htmlFor=\"description\">Descripci√≥n</label>\r\n              <input\r\n                id=\"description\"\r\n                type=\"text\"\r\n                name=\"description\"\r\n                value={tarea?.description}\r\n                onChange={(e) => {\r\n                  setTarea({...tarea, description: e.target.value})\r\n                }}\r\n              />\r\n            </div>\r\n    \r\n            <div>\r\n              <label htmlFor=\"progress\">Progreso</label>\r\n              <select \r\n                id=\"progress\"\r\n                name=\"progress\"\r\n                value={tarea?.progress}\r\n                onChange={(e) => {\r\n                  setTarea({ ...tarea, progress: e.target.value });\r\n                }}\r\n                required\r\n              >\r\n                <option value=\"pendiente\">Pendiente</option>\r\n                <option value=\"enproceso\">En Proceso</option>\r\n                <option value=\"finalizada\">Finalizada</option>\r\n                <option value=\"postergada\">Postergada</option>\r\n                <option value=\"cancelada\">Cancelada</option>\r\n              </select>\r\n              </div>\r\n            <div>\r\n              <label htmlFor=\"creationDate\">Fecha de Creaci√≥n</label>\r\n              <input\r\n                id=\"creationDate\"\r\n                type=\"date\"\r\n                name=\"creationDate\"\r\n                value={tarea?.creationDate}\r\n                onChange={(e) => {\r\n                  setTarea({...tarea, creationDate: e.target.value})\r\n                }}\r\n                required\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"startDate\">Fecha de Inicio</label>\r\n              <input\r\n                id=\"startDate\"\r\n                type=\"date\"\r\n                name=\"startDate\"\r\n                value={tarea?.startDate}\r\n                onChange={(e) => {\r\n                  setTarea({...tarea, startDate: e.target.value})\r\n                }}\r\n              />\r\n            </div>\r\n\r\n            <div>\r\n              <label htmlFor=\"completionDate\">Fecha de Finalizaci√≥n</label>\r\n              <input\r\n                id=\"completionDate\"\r\n                type=\"date\"\r\n                name=\"completionDate\"\r\n                value={tarea?.completionDate}\r\n                onChange={(e) => {\r\n                  setTarea({...tarea, completionDate: e.target.value})\r\n                }}\r\n              />\r\n            </div>\r\n            <button type=\"submit\">Editar Tarea</button>\r\n          </Form>\r\n        </Layout>\r\n      );\r\n\r\n    \r\n}\r\n\r\n\r\n\r\nexport const EditTaskPage = WithAuth(EditTask);","const getParams = () => {\r\n    const params = new URLSearchParams(window.location.search);\r\n      let titleParams = params.get('title');\r\n      let descriptionParams = params.get('description');\r\n      let progressParams = params.get('progress');\r\n      let userParams = params.get('user');\r\n      let creationDateParams = params.get('creationDate');\r\n      let startDateParams = params.get('startDate');\r\n      let completionDateParams = params.get('completionDate');\r\n      let idParams = params.get('id')\r\n    \r\nreturn {titleParams, descriptionParams, progressParams, userParams, creationDateParams, startDateParams, completionDateParams, idParams }\r\n}\r\n\r\nexport { getParams }","import { FC } from \"react\";\r\nimport { Card, Col } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../../hooks\";\r\nimport { Task } from \"../../../types\";\r\n\r\ntype Props = {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    description: string;\r\n    progress: string;\r\n    user: string;\r\n    creationDate: string;\r\n    startDate: string;\r\n    completionDate: string;\r\n    color?: string;\r\n}\r\n\r\nconst TaskCard: FC<Props> = ({ id, title, category, description, progress, creationDate, startDate, completionDate, color }) => {\r\n    const { userSession }= useAuth()\r\n\r\n    return (\r\n    <Card style={{ width: '15rem' }} className=\"cardTask shadow-lg p-3 mb-5 bg-body rounded\" data-id={id} data-progress={progress}>\r\n        <Card.Body>\r\n            <Card.Title className=\"fw-bold h5\">üìå{title}</Card.Title>\r\n                <Card.Subtitle className=\"mb-2 fw-light fs-6\"><span className=\"badge rounded-pill bg-secondary text-light\">{userSession.name}</span></Card.Subtitle>\r\n                <Card.Subtitle className=\"mb-1 fw-light fs-6\"><span className=\"badge rounded-pill bg-warning text-dark text-wrap\">{category}</span></Card.Subtitle>\r\n                <Card.Text className=\"fw-normal fs-6 fst-italic\">\r\n                    {description}\r\n                </Card.Text>\r\n                <Card.Text className=\"mb-1 text-muted fs-6 fw-light lh-1\">Creado: {creationDate}</Card.Text>\r\n                <Card.Text className=\"mb-1 text fs-6 fw-light lh-1\">Iniciado: {startDate}</Card.Text>\r\n                <Card.Text className=\"mb-1 text-success fs-6 fw-light lh-1\">Finalizado: {completionDate}</Card.Text>\r\n                <Link className=\"text-decoration-none linkButton border border-dark\" to={`./edit-task?id=${id}`}>Editar Tarea</Link><span className={`badge rounded-pill text-light ms-1 ${color}`}>{progress}</span>\r\n        </Card.Body>\r\n    </Card>            \r\n    )\r\n}\r\n\r\n\r\nexport { TaskCard }","import { useState } from \"react\";\r\nimport { Col } from \"react-bootstrap\";\r\nimport { getTasks } from \"../../api\";\r\nimport { Layout, TaskWrapper } from \"../../components\";\r\nimport { TaskCard } from \"../../components/common\";\r\nimport { WithAuth } from \"../../hoc\";\r\nimport { useAuth } from \"../../hooks\";\r\nimport { Task } from \"../../types\";\r\n\r\n\r\nconst Tasks = () => {\r\n    const [task, setTask] = useState<Task[]>();\r\n  \r\n    const obtenerTareas = async () => {\r\n      const response = await getTasks();\r\n      setTask(response);\r\n    };\r\n  \r\n    if (!task) {\r\n      obtenerTareas();\r\n  }\r\n  \r\n // task?.sort((a, b) => { return SortTask(a,b)})\r\n  \r\n  const { userSession } = useAuth()\r\n     \r\n      return (\r\n        <Layout mainClass=\"tasks\">\r\n          <TaskWrapper title='PENDIENTES' color='bg-danger' >\r\n            <Col className=\"d-flex flex-wrap justify-content-center\">\r\n              {task?.map((item) => {\r\n              if (userSession.id === item.user) {\r\n                if (item.progress === 'pendiente') {\r\n                    return (                  \r\n                      <TaskCard id={item.id} title={item.title.toUpperCase()} category={ item.category } description={item.description} progress={item.progress} user={item.user} creationDate={item.creationDate} startDate={item.startDate} completionDate={item.completionDate} color='bg-danger' >\r\n                      </TaskCard>                  \r\n                    )\r\n                  }\r\n                }\r\n                return ''\r\n              })}               \r\n          </Col>\r\n          </TaskWrapper>\r\n          <TaskWrapper title='EN PROCESO' color='bg-secondary'>\r\n            <Col className=\"d-flex flex-wrap justify-content-center\">\r\n              {task?.map((item) => {\r\n                if (userSession.id === item.user) {\r\n                  if (item.progress === 'enproceso') {\r\n                    return (                  \r\n                      <TaskCard id={item.id} title={item.title.toUpperCase()} category={ item.category } description={item.description} progress={item.progress} user={item.user} creationDate={item.creationDate} startDate={item.startDate} completionDate={item.completionDate} color='bg-secondary'>\r\n                      </TaskCard>                  \r\n                    )\r\n                  }\r\n                }\r\n                return ''\r\n              })}               \r\n          </Col>\r\n          </TaskWrapper>\r\n          <TaskWrapper title='FINALIZADAS' color='bg-success' >\r\n            <Col className=\"d-flex flex-wrap justify-content-center\">\r\n              {task?.map((item) => {\r\n                if (userSession.id === item.user) {\r\n                  if (item.progress === 'finalizada') {\r\n                    return (                  \r\n                      <TaskCard color='bg-success' id={item.id} title={item.title.toUpperCase()} category={ item.category } description={item.description} progress={item.progress} user={item.user} creationDate={item.creationDate} startDate={item.startDate} completionDate={item.completionDate} >\r\n                      </TaskCard>                  \r\n                    )\r\n                  }\r\n                }\r\n                return ''\r\n              })}               \r\n          </Col>\r\n          </TaskWrapper>\r\n          <TaskWrapper title='POSTERGADAS' color='bg-dark'>\r\n            <Col className=\"d-flex flex-wrap justify-content-center\">\r\n              {task?.map((item) => {\r\n                if (userSession.id === item.user) {\r\n                  if (item.progress === 'postergada') {\r\n                    return (                  \r\n                      <TaskCard id={item.id} title={item.title.toUpperCase()} category={ item.category } description={item.description} progress={item.progress} user={item.user} creationDate={item.creationDate} startDate={item.startDate} completionDate={item.completionDate} color='bg-dark'>\r\n                      </TaskCard>                  \r\n                    )\r\n                  }\r\n                }\r\n                return ''\r\n              })}               \r\n          </Col>\r\n          </TaskWrapper>\r\n          <TaskWrapper title='CANCELADAS' color='bg-dark'>\r\n            <Col className=\"d-flex flex-wrap justify-content-center\">\r\n              {task?.map((item) => {\r\n                if (userSession.id === item.user) {\r\n                  if (item.progress === 'cancelada') {\r\n                    return (                  \r\n                      <TaskCard id={item.id} title={item.title.toUpperCase()} category={ item.category } description={item.description} progress={item.progress} user={item.user} creationDate={item.creationDate} startDate={item.startDate} completionDate={item.completionDate} color='bg-dark'>\r\n                      </TaskCard>                  \r\n                    )\r\n                  }\r\n                }\r\n                return ''\r\n              })}               \r\n          </Col>\r\n          </TaskWrapper>\r\n        </Layout>\r\n        );\r\n  };\r\n  \r\n\r\nexport const DashboardPage = WithAuth(Tasks)","import { FC, FormEvent, useEffect, useState } from \"react\";\r\nimport { Layout } from \"../../components\";\r\nimport { useAuth } from \"../../hooks\";\r\nimport { WithAuth } from \"../../hoc\";\r\nimport { Form } from 'react-bootstrap'\r\n\r\n\r\nconst Login: FC = () => {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPass] = useState(\"\");\r\n  \r\n  const { login, userSession } = useAuth();\r\n    \r\n    const handleSubmit = async (e: FormEvent) => {\r\n      e.preventDefault();\r\n      try {\r\n        await login(email, password);\r\n        \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    };\r\n  \r\n    useEffect(() => {\r\n      localStorage.setItem(\"user\", JSON.stringify(userSession));\r\n    }, [userSession]);\r\n  \r\n    // if (userSession) {\r\n    //   localStorage.setItem(\"user\", JSON.stringify(userSession));\r\n    // }\r\n  \r\n    return (\r\n      <Layout mainClass=\"login\">\r\n        <h4>Por favor ingrese su usuario:</h4>\r\n        <Form action=\"\" onSubmit={handleSubmit}>\r\n          <div>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              name=\"email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n  \r\n          <div>\r\n            <label htmlFor=\"pass\">Contrase√±a</label>\r\n            <input\r\n              id=\"pass\"\r\n              type=\"password\"\r\n              name=\"pass\"\r\n              value={password}\r\n              onChange={(e) => setPass(e.target.value)}\r\n            />\r\n          </div>\r\n  \r\n          <button type=\"submit\">Iniciar sesi√≥n</button>\r\n        </Form>\r\n      </Layout>\r\n    );\r\n  };\r\n  \r\n  export const LoginPage = WithAuth(Login);","import { FC, FormEvent, useEffect, useState } from 'react'\r\nimport { Card, Col, Container, Form, Row } from 'react-bootstrap';\r\nimport { Layout } from '../../components';\r\nimport { CategoryWrapper } from '../../components/parts';\r\nimport { WithAuth } from '../../hoc';\r\nimport { useAuth } from '../../hooks';\r\nimport { Category } from '../../types';\r\nimport { createCategory, getCategories } from './api'\r\n\r\n\r\nconst defaultValues = {\r\n    category: \"\",\r\n    user: \"\",\r\n}\r\n  \r\nconst Categories: FC = () => {\r\n    \r\n    const [category, setCategory] = useState(defaultValues);\r\n  const [categoryCard, setCategoryCard] = useState<Category[]>()\r\n  \r\n    const { userSession } = useAuth()\r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        \r\n        createCategory({ ...category, user: userSession.id })\r\n      };\r\n\r\n      useEffect(() => {\r\n        getCategories().then((response) => {\r\n          setCategoryCard(response);\r\n        });\r\n      },);\r\n    \r\n\r\n    return (\r\n        \r\n      <Layout mainClass=\"categories\">\r\n        <Container className=\"formCategories\">\r\n          <Row className=\"justify-content-md-center\">\r\n            <Col md=\"auto\">\r\n              <h4>Por favor ingrese su nueva categor√≠a:</h4>\r\n              <Form action=\"\" onSubmit={handleSubmit} className=\"ms-4\">\r\n                <div>\r\n                  <label htmlFor=\"email\">Categor√≠a</label>\r\n                  <input\r\n                    id=\"category\"\r\n                    type=\"text\"\r\n                    name=\"category\"\r\n                    value={category.category}\r\n                              onChange={(e) => setCategory({ ...category, category: e.target.value })}\r\n                  />\r\n                </div>          \r\n                <button type=\"submit\">Crear categor√≠a</button>\r\n              </Form>  \r\n            </Col>\r\n            <Col md=\"auto\">  \r\n          <CategoryWrapper>\r\n              {categoryCard?.map((item) => {\r\n                if (userSession.id === item.user) {\r\n                  return (\r\n                    <Card style={{ width: '15rem' }} className=\"cardTask shadow-lg p-3 mb-1 bg-body rounded\" data-id={item.id}>\r\n                      <Card.Body>\r\n                        <Card.Title className=\"fw-bold h4\">{item.category}</Card.Title>\r\n                        <Card.Subtitle><span className=\"badge rounded-pill bg-secondary text-light\">{userSession.name}</span></Card.Subtitle>\r\n                      </Card.Body>\r\n                    </Card>\r\n                  )\r\n                }\r\n                return ''\r\n              })}\r\n            </CategoryWrapper>\r\n            </Col>\r\n          </Row>\r\n          </Container>\r\n        </Layout>\r\n        \r\n    )\r\n\r\n}\r\n\r\nexport const CategoriesPage = WithAuth(Categories);","import { FC } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Layout } from \"../../components\";\r\n\r\n\r\nconst HomePage: FC = () => {\r\n    \r\n    return (\r\n        <Layout mainClass=\"home\">\r\n            <h1><span className=\"maquina-escribir\">Welcome ToDO App...</span></h1>\r\n            <Link className=\"text-decoration-none linkButton border border-dark mt-5\" to={'./login'}>Login</Link>\r\n        </Layout>\r\n\r\n    )\r\n}\r\n\r\nexport {HomePage}","import React from 'react';\r\nimport { SignUpPage, AddTaskPage, Users, EditTaskPage, DashboardPage, LoginPage, CategoriesPage, HomePage } from '../src/pages'\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \r\n\r\n//import { Categories } from './pages/Categories';\r\n\r\n\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/login\" component={LoginPage} />\r\n        <Route path=\"/sign-up\" component={SignUpPage} />\r\n        {/* <Route path=\"/recovery-password\" component={SignUpPage} /> */}\r\n\r\n        \r\n        <Route path=\"/users\" component={Users} />\r\n        {/* <Route path=\"/profile\" component={Users} /> */}\r\n        <Route path=\"/dashboard\" component={DashboardPage} />\r\n        <Route path=\"/edit-task\" component={EditTaskPage} />\r\n        <Route path=\"/add-tasks\" component={AddTaskPage} />\r\n        <Route path=\"/categories\" component={CategoriesPage} />\r\n        <Route path=\"/\" component={HomePage} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './index.css'\r\nimport '../node_modules/font-awesome/css/font-awesome.min.css'; \r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n        <App />\r\n  </React.StrictMode>,   \r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}